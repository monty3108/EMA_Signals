15:50:39: NIFTY 50 assigned. (assigned|my_logger)
15:50:40: Socket is closed (Web Socket|my_logger)
15:50:40: Socket Opened (socket_open|my_logger)
15:50:40: Connected (socket_open|my_logger)
15:51:53: Program is designed to quit on Mon. Exiting.........  (quit_on_days|my_logger)
10:32:53: Session Id generated (session_id_generate|my_logger)
10:32:56: Master contract Downloaded. (session_id_generate|my_logger)
10:32:56: NIFTY 50 assigned. (assigned|my_logger)
10:32:57: Socket is closed (Web Socket|my_logger)
10:32:57: Socket Opened (socket_open|my_logger)
10:32:57: Connected (socket_open|my_logger)
10:33:12: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size='')] (subscribe|my_logger)
10:33:12: ltp_update started (ltp_update|my_logger)
10:33:12: Token Acknowledgement status : 26000 (feed_data|my_logger)
10:33:13: 25012100067590 rejected: RED:Margin Shortfall:INR 339.48 Available:INR 943.65 for C-AB154186 [ABFSFREEDOM] (check_order_status|my_logger)
10:33:13: NIFTY 50 LTP: 23160.6 (ltp_update|my_logger)
10:33:13: ltp_update exited (ltp_update|my_logger)
10:33:14: {
    "status": "Ok"
} (nf_buy|my_logger)
10:41:42: NIFTY23JAN25P22550 assigned. (assigned|my_logger)
10:43:37: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size=''), Instrument(exchange='NFO', token=np.int64(54755), symbol='NIFTY', name='NIFTY23JAN25P22550', expiry='2025-01-23', lot_size=np.int64(75))] (subscribe|my_logger)
10:43:37: Token Acknowledgement status : 26000 (feed_data|my_logger)
10:43:37: Token Acknowledgement status : 54755 (feed_data|my_logger)
10:43:43: ltp_update started (ltp_update|my_logger)
10:43:44: NIFTY 50 LTP: 23192.15 (ltp_update|my_logger)
10:43:44: NIFTY23JAN25P22550 LTP: 15.55 (ltp_update|my_logger)
10:43:44: ltp_update exited (ltp_update|my_logger)
10:30:21: Session Id generated (session_id_generate|my_logger)
10:30:25: Master contract Downloaded. (session_id_generate|my_logger)
10:30:25: NIFTY 50 assigned. (assigned|my_logger)
10:30:25: NIFTY26DEC24C23750 assigned. (assigned|my_logger)
10:30:26: NIFTY26DEC24P23400 assigned. (assigned|my_logger)
10:30:27: Socket is closed (Web Socket|my_logger)
10:30:27: Socket Opened (socket_open|my_logger)
10:30:27: Connected (socket_open|my_logger)
10:30:42: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size='')] (subscribe|my_logger)
10:30:42: ltp_update started (ltp_update|my_logger)
10:30:42: Token Acknowledgement status : 26000 (feed_data|my_logger)
10:30:43: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
10:30:43: NIFTY 50 LTP: 23298.35 (ltp_update|my_logger)
10:30:43: ltp_update exited (ltp_update|my_logger)
10:30:44: {
    "status": "Ok"
} (nf_buy|my_logger)
10:30:44: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
10:33:01: NIFTY 50 assigned. (assigned|my_logger)
10:33:02: Socket is closed (Web Socket|my_logger)
10:33:02: Socket Opened (socket_open|my_logger)
10:33:02: Connected (socket_open|my_logger)
10:33:17: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size='')] (subscribe|my_logger)
10:33:17: ltp_update started (ltp_update|my_logger)
10:33:17: Token Acknowledgement status : 26000 (feed_data|my_logger)
10:33:18: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
10:33:18: NIFTY 50 LTP: 23295.85 (ltp_update|my_logger)
10:33:18: ltp_update exited (ltp_update|my_logger)
10:33:19: {
    "status": "Ok"
} (nf_buy|my_logger)
10:33:19: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
11:48:05: Program is designed to quit on Tue. Exiting.........  (quit_on_days|my_logger)
11:48:37: Session Id generated (session_id_generate|my_logger)
11:48:40: Master contract Downloaded. (session_id_generate|my_logger)
11:48:40: NIFTY 50 assigned. (assigned|my_logger)
11:48:42: Socket is closed (Web Socket|my_logger)
11:48:43: Socket Opened (socket_open|my_logger)
11:48:43: Connected (socket_open|my_logger)
11:48:58: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size='')] (subscribe|my_logger)
11:48:58: ltp_update started (ltp_update|my_logger)
11:48:58: Token Acknowledgement status : 26000 (feed_data|my_logger)
11:48:58: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
11:48:59: NIFTY 50 LTP: 23254.5 (ltp_update|my_logger)
11:48:59: ltp_update exited (ltp_update|my_logger)
11:49:00: {
    "status": "Ok"
} (nf_buy|my_logger)
11:49:01: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
11:52:39: NIFTY 50 assigned. (assigned|my_logger)
11:52:41: Socket is closed (Web Socket|my_logger)
11:52:41: Socket Opened (socket_open|my_logger)
11:52:41: Connected (socket_open|my_logger)
11:52:56: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size='')] (subscribe|my_logger)
11:52:56: ltp_update started (ltp_update|my_logger)
11:52:56: Token Acknowledgement status : 26000 (feed_data|my_logger)
11:52:56: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
11:52:57: NIFTY 50 LTP: 23256.1 (ltp_update|my_logger)
11:52:57: ltp_update exited (ltp_update|my_logger)
11:52:57: {
    "status": "Ok"
} (nf_buy|my_logger)
17:20:32: Session Id generated (session_id_generate|my_logger)
17:20:36: Master contract Downloaded. (session_id_generate|my_logger)
17:22:23: NIFTY 50 assigned. (assigned|my_logger)
17:22:24: Socket is closed (Web Socket|my_logger)
17:22:24: Socket Opened (socket_open|my_logger)
17:22:24: Connected (socket_open|my_logger)
17:22:39: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size='')] (subscribe|my_logger)
17:22:39: ltp_update started (ltp_update|my_logger)
17:22:39: Token Acknowledgement status : 26000 (feed_data|my_logger)
17:22:40: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
17:22:41: {
    "status": "Ok"
} (nf_buy|my_logger)
17:23:39: NIFTY 50 LTP: None (ltp_update|my_logger)
17:23:39: ltp_update exited (ltp_update|my_logger)
17:26:45: NIFTY 50 assigned. (assigned|my_logger)
17:26:46: Socket is closed (Web Socket|my_logger)
17:26:46: Socket Opened (socket_open|my_logger)
17:26:46: Connected (socket_open|my_logger)
17:27:01: Feed subscribed for: 
[Instrument(exchange='NSE', token=np.int64(26000), symbol='NIFTY 50', name='', expiry='', lot_size='')] (subscribe|my_logger)
17:27:01: ltp_update started (ltp_update|my_logger)
17:27:01: Token Acknowledgement status : 26000 (feed_data|my_logger)
17:27:02: get order history response: {'stat': 'Not_Ok', 'emsg': 'Error Occurred : 5 "no data"'} (check_order_status|my_logger)
17:27:02: NIFTY 50 LTP: 22420 (ltp_update|my_logger)
17:27:02: ltp_update exited (ltp_update|my_logger)
17:27:03: {
    "status": "Ok"
} (nf_buy|my_logger)
18:40:17: 'NoneType' object is not subscriptable (get_session_id|my_logger)
18:40:18: Session Id generated (session_id_generate|my_logger)
18:40:21: Master contract Downloaded. (session_id_generate|my_logger)
18:49:33: Session Id generated (session_id_generate|my_logger)
18:49:36: Master contract Downloaded. (session_id_generate|my_logger)
19:17:21: TCS-EQ assigned. (assigned|my_logger)
17:23:45: Session Id generated (session_id_generate|my_logger)
17:23:47: Master contract Downloaded. (session_id_generate|my_logger)
09:55:19: Session Id generated (session_id_generate|my_logger)
09:55:21: Master contract Downloaded. (session_id_generate|my_logger)
15:42:59: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
15:43:59: Function recalled. (session_id_generate|my_logger)
15:43:59: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
15:45:00: Function recalled. (session_id_generate|my_logger)
15:45:00: Session Id generated (session_id_generate|my_logger)
15:45:05: Master contract Downloaded. (session_id_generate|my_logger)
10:04:53: Session Id generated (session_id_generate|my_logger)
10:04:57: Master contract Downloaded. (session_id_generate|my_logger)
09:21:30: Session Id generated (session_id_generate|my_logger)
09:21:32: Master contract Downloaded. (session_id_generate|my_logger)
14:48:33: Session Id generated (session_id_generate|my_logger)
14:48:36: Master contract Downloaded. (session_id_generate|my_logger)
15:02:19: 05-06-2025, 15:02:19:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data|my_logger)
15:05:28: 05-06-2025, 15:05:28:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data|my_logger)
15:11:26: 05-06-2025, 15:11:26:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data|my_logger)
15:14:08: 05-06-2025, 15:14:08:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data1|my_logger)
14:40:56: Session Id generated (session_id_generate|my_logger)
14:40:58: Master contract Downloaded. (session_id_generate|my_logger)
14:42:21: 06-06-2025, 14:42:21:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data1|my_logger)
14:43:49: 06-06-2025, 14:43:49:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data1|my_logger)
14:46:06: 06-06-2025, 14:46:06:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data|my_logger)
14:46:37: 06-06-2025, 14:46:37:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data|my_logger)
14:46:51: 06-06-2025, 14:46:51:Error: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'RangeIndex' (resample_data|my_logger)
10:17:51: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
10:18:52: Function recalled. (session_id_generate|my_logger)
10:18:52: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
10:20:00: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
10:21:01: Function recalled. (session_id_generate|my_logger)
10:21:01: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
10:22:02: Function recalled. (session_id_generate|my_logger)
10:22:02: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
10:23:03: Function recalled. (session_id_generate|my_logger)
10:23:03: Session Id generated (session_id_generate|my_logger)
10:23:06: Master contract Downloaded. (session_id_generate|my_logger)
22:35:27: Session Id generated (session_id_generate|my_logger)
22:35:31: Master contract Downloaded. (session_id_generate|my_logger)
00:27:53: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
00:28:53: Function recalled. (session_id_generate|my_logger)
00:28:54: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
00:29:54: Function recalled. (session_id_generate|my_logger)
00:29:54: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
00:30:55: Function recalled. (session_id_generate|my_logger)
00:30:55: Session Id generated (session_id_generate|my_logger)
00:30:58: Master contract Downloaded. (session_id_generate|my_logger)
16:48:13: Session Id generated (session_id_generate|my_logger)
16:48:16: Master contract Downloaded. (session_id_generate|my_logger)
16:51:14: Session Id generated (session_id_generate|my_logger)
16:51:18: Master contract Downloaded. (session_id_generate|my_logger)
18:54:35: Session Id generated (session_id_generate|my_logger)
18:54:38: Master contract Downloaded. (session_id_generate|my_logger)
19:34:05: Session Id generated (session_id_generate|my_logger)
19:34:09: Master contract Downloaded. (session_id_generate|my_logger)
20:11:22: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
20:12:23: Function recalled. (session_id_generate|my_logger)
20:12:23: Session Id generated (session_id_generate|my_logger)

20:12:33: mylogger Error: ('Connection aborted.', ConnectionAbortedError(10053, 'An established connection was aborted by the software in your host machine', None, 10053, None))20:12:33: Error: HTTPSConnectionPool(host='v2api.aliceblueonline.com', port=443): Max retries exceeded with url: /restpy/static/contract_master/NFO.csv (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002170291C190>: Failed to resolve 'v2api.aliceblueonline.com' ([Errno 11001] getaddrinfo failed)")). Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)

20:12:33: mylogger Error: HTTPSConnectionPool(host='api.telegram.org', port=443): Max retries exceeded with url: /bot5398501864:AAFEn7ljDrKOVkXzhWX4P_khX9Xk-E8FicE/sendMessage?chat_id=5162043562&parse_mode=MarkdownV2&text=20:12:33:%20Error:%20HTTPSConnectionPool%5C(host%5C='v2api%5C.aliceblueonline%5C.com',%20port%5C=443%5C):%20Max%20retries%20exceeded%20with%20url:%20/restpy/static/contract%5C_master/NFO%5C.csv%20%5C(Caused%20by%20NameResolutionError%5C(%22%3Curllib3%5C.connection%5C.HTTPSConnection%20object%20at%200x000002170291C190%3E:%20Failed%20to%20resolve%20'v2api%5C.aliceblueonline%5C.com'%20%5C(%5BErrno%2011001%5D%20getaddrinfo%20failed%5C)%22%5C)%5C)%5C.%20Calling%20function%20again%20after%201%20min%5C.%20Log%20In%20your%20account%20using%20TOTP%5C.%20%5C(session%5C_id%5C_generate%5C%7Cmy%5C_logger%5C) (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002170291C690>: Failed to resolve 'api.telegram.org' ([Errno 11001] getaddrinfo failed)"))17:56:01: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
17:57:01: Function recalled. (session_id_generate|my_logger)
17:57:02: Session Id generated (session_id_generate|my_logger)
17:57:05: Master contract Downloaded. (session_id_generate|my_logger)
13:12:30: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
13:13:31: Function recalled. (session_id_generate|my_logger)
13:13:31: Session Id generated (session_id_generate|my_logger)
13:13:33: Master contract Downloaded. (session_id_generate|my_logger)
07:53:30: Error: 'sessionID'. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
07:54:31: Function recalled. (session_id_generate|my_logger)
07:54:31: Session Id generated (session_id_generate|my_logger)
07:54:32: Error: 'module' object is not callable. Did you mean: 'time.time(...)'?. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
15:55:25: Session Id generated (session_id_generate|my_logger)
15:55:26: Error: 'module' object is not callable. Did you mean: 'time.time(...)'?. Calling function again after 1 min. Log In your account using TOTP. (session_id_generate|my_logger)
